1) На предыдущем проекте делал умную систему фильтров по сущностям на .net + mongodb
оказывается это дефункционализация: )

Очевидна была необходимость сериализации фильтров и возможность быстрого добавления новых фильтров, поэтому 
- было выделено подмножество типов фильтров;
- каждому конкретному типу фильтра, был выбран тип из подмножества фильтров;
- в слое данных производилась фильтрация по конкретному типу фильтра;
 
2) В досье компании, часто напиливают методы для получения данных сущности в разных разрезах.
Сейчас это сделано на коленке без функций высшего порядка, напрямую в слое данных, под каждый случай.

Удобнее было бы реализовать систему с конкретными сериализуемыми типами фильтров, для получения необходимого разреза по сущности/сущностям.
Таким образом количество постоянно плодимых методов снизится к 0.

Конечно можно отдавать всегда максимально полные данные по сущности, но это может быть не релевантно для некоторых случаев использования.


Итого - кажется, дефункционализация достаточно сильный паттерн, который 
- упрощает рефакторинг и поддержку кода;
- дает возможность сериализации;
- дает возможность адаптировать систему для параллельного выполнения, что явно улучшит масштабируемость;


1) приложение перезагружалось и писало ошибку в windows event log

Старое приложение хостилось еще на iis, после одного из релизов начало падать и перезагружаться стабильно 1 раз в день.

Провозился я, будучи еще мидлом около месяца с поиском этой ошибки.

Оказалось - рекурсивное событие в коде. Нашли с помощью дампа памяти, который сняли перед падением.

Перепробовали все мелкие фиксы, добавляли памяти, увеличивали лимиты и т д.

Не хватало более широкого понимания картины, для начала стоило:
- понять, когда начала появлятся ошибка;
- пересмотреть код с последних релизов;
- сделать выводы и повторить последние два пункта;

В тот момент не хватало более системных навыков и вопросов
- как найти, почему cpu начинает стабильно отжиратся?
- какие события приводят к такому поведению - увеличение cpu ? 
Явно это бесконечные циклы и рекурсия в коде.
Не считая нагрузки.

Опыт был интересный, но знаний и опыта в тот момент не хватало, коллеги под конец смогли помочь проанализировать дамп.

Помню, что я в отличии от других коллег, не сдавался и в течении месяца активно искал проблему и так и почти решил самостоятельно.

2) cpu улетало до 99%

Была известная проблема, что в одном из мест зацикливалась флоу машины для перехода по шагам, у одного из клиентов.
Что вышатывало всю аппку.

Сразу подумал, что настрой очень важен, был уверен, что возьму и условно за полдня разберусь с этой проблемой - настроил себя ментально на это.

В итоге точно знал, какие вопросы стоит задавать и как двигаться:
- раз cpu 99% это точно бесконечный цикл или рекурсия, значит надо снять и проанализировать дамп;
- после анализа дампа, проблема была легко локализована, проанализировал код и увидел наличие сложного цикла.

Это был один из последних поисков, доволен быстрым результатом - поскольку смог сразу определить путь для поиска, задавая более широкие вопросы изначально.

3) счет открывался без ожидания подписания

Для открытия счета нужно было соблюдать условия
- все шаги завершены
- подписание завершено (только для некоторых стран)

Проблема была следующая
- счет открывался быстро на тестовой среде, с помощью механизма автооткрытия;
- блок ожидания посчитал, что подписание завершено;

Была проверка, есть ли объект подписания, смотрело на его статус. Но поскольку объекта не было, никаких проверок не происходило и считало подписание завершенным.

Смог решить, с помощью линеаризации времени и событий.
Надо было при создании онбординга, добавить туда фичу необходимости подписания, а при проверке завершенности смотреть на нее и статус подписания.
 
Проблема была плавающая, сейчас бы решал так:
- исключил проблемы тестового окружения, поскольку баг появился после моих доработок в определенный момент.
Значит, точно проблема в коде;
- исключил бы проблему на других онбордингах, в которых нет подписания;

проверил бы код ожидания подписания и нашел бы проблему в 2-3 раза быстрее.

Итого для себя могу выделить следующее: 
- иметь четкий настрой разобраться и найти проблему при любых обстоятельствах;
- иметь глубокие познания в архитектуре и устройстве систем, с которыми работаешь, теоретических и практических;
- не стеснятся просить помощи коллег по команде;
как вариант использовать chat gpt для консультаций (как метод разговора с уткой)
- думать над проблемой в разных разрезах (железо, софт, кодовая база, окружение).

Как к таковой отладке уже давно не прибегаю, а после решения бага, покрываю юнит тестами или изменяю архитектуру - это более важный аспект для долгосрочного развития системы.
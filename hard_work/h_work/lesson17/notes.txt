Изменения в архитектуре онбординга

Постараюсь описать текущие проблемы и рядом методы их решения

Сейчас сервис онбординга (отдельное приложение) 
является промежуточным местом для сбора данных по компании для открытия счета, 
при этом также есть мастер хранилище (досье клиента), куда онбординг ходит чтобы показать данные пользователю или записать их.

1) межсервисное взаимодействие

Есть проблема, с тем что онбординг и досье многовато знают друг о друге, coupling не сильно жесткий, но есть очевидная проблема,
Плодится много внутренних http методов,

Решается это очень просто, поскольку есть оркестратор камунда, способная хранить переменные, то используем ее как промежуточное хранилище, для формирования заявки
(придется учесть шифрование персоналки, но тоже легко решается)
Постепенно убираем методы для межсервисного взаимодействия и делаем возврат переменных в камунде, определяем общие контракты. (Блоки входов выходов с переменными в bpmn)

2) плодится много межсервисных http методов для работы с изменением/добавлением досье

Ограничиваем точки изменений с помощью качественного спроектированного внутреннего интерфейса в досье (речь не про апи, условно про АТД), 

по сути поскольку имеем набор данных в оркестраторе
То можем эти данные сливать в досье, при окончании определенных этапов. Выделяем явные этапы в процессе.

(Этапы - базовая информация по бизнесу, список персон, верификации и тп)

Либо имеем набор параметров, который можно изменять/добавлять, и которые будет формировать/получать онбординг.
(Делать кучу разных методов, для изменения получения параметров, приводит только к запутыванию и усложнению системы - сейчас уже так)


3) флоу машина онбординга
Бывают небольшие разветвления с циклами (когда с экрана идешь на следующий экран а потом опять возвращаешься на изначальный)
Которые создают трудности в последующих разветвлениях, 
Для таких случаев можно создавать кастомные эндпоинты в апи, и цикл уже будет замкнут внутри конкретной реализации.
Итого - упрощается флоу машина любого конкретного типа онбординга, проще вносить изменения.

есть еще много над чем работать, но это пока одни из самых беспокоящих точек,
на основе этого анализа выстрою план v3 версии онбординга, с учетом текущих ошибок, чтобы стратегически развивать системы
с качественным дизайном и архитектурой.
Подумал еще раз про стейт машину для онбординга.

Шаги онбординга - это шаги процесса онбординга.
Сейчас, есть умная стейт машина, которая менеджит переходы из состояния в состояние на основе триггеров. 
Триггеры типизированы.

При этом есть два типа шагов
- синхронный переход, можем посчитать данные сразу;
- асинхронный переход, нужно подождать, чтобы процесс в камунде сказал, когда можно продолжить.

В данный момент, результат триггера стейт машины фиксируется статически, через атрибут класса.

Можно улучшить текущую схему, следующим образом:
- начинаем хранить отправленные данные с шагов онбординга;
- триггер получает больше контекста (доступ к отправленным данным текущего шага);
- добавляем в функцию триггера continuation, перестаем возвращать простой булевый флаг, в continuation передаем обьект с результатом куда идти дальше (шаг) и почему.

При этом если видим, что текущий шаг ждет данных и не можем посчитать синхронно, то не вызываем триггеры, откладывая выполнение.
При получении ответа от камунды, продолжаем выполнение, также используя CPS.


Благодаря continuation легко 
- сделать cross cutting concerns (логирование переходов и тп);
- возможно упростить поиск в глубину для перехода на следующий шаг.

Итого - техника cps достаточно мощная штука, которая очень хорошо сочитается со стейт машинами и асинхронным выполнением, 
а если необходимо распараллелить вычисления на нескольких машинах, можно добавить дефункционализации.
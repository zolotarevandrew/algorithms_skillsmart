1) Обработка видеоидентификации по особому, используя одну и ту же интеграцию
Для обычной верификации было простой флоу InProgress->Pending->Result
для видеоидентификации флоу оказался другим InProgress->Pending->Pending->Result->Pending->Result
оказалось, что при получении хука pending, на самом деле клиент мог просто покидать идентификацию, поскольку был видеозвонок.
при этом обработка хуков расширялась новыми статусами для состояния Pending.

Долго думал как обойти эту проблему, в итоге решили не обрабатывать pending статус для типа видеоидентификации
на уровне обработчиков сообщений в бизнес логике. А при получении результата сначала ставить статус pending (для аналитики и других вещей)
а через 15 секунд ставить уже сам полученный результат. 
Итого было минимум доработок и явная понятная модель обработки видеоидентификации.

2) Был пример сильной портянки условий для реализации одной задачи по определению
типов репрезентации персон в компании для конкретной страны.
Около 10+- условий сложных. 

Итого я просто переписал этот алгоритм указав продакту, на 4 или 5 лишних условий :)
а граничные вещи просто засунули в алертилку как ошибку в логи.

3) После верификации данные из документов персоны
переезжали в саму персону, чтобы совпадать с документами, до этого происходил матчинг.
Необходимо было реализовать логику для 4 новых стран - для перезаписи имен и фамилии по различным алгоритмам.
Пытались решить это на своей стороне, оказалось достаточно сложно.

В итоге пошли пробовать договорится с провайдером верификации, которые любезно согласились, сделать доработку настроек на своей сторон, под каждый тип документа в конкретной стране :)
видимо был частый кейс и не только у нас. 

4) Из последнего
необходимо было провести интеграцию с провайдером цифровой подписи документов.
при создании досье персоны нужно отправлять огромный список полей, которого у нас нет и мы не собираем в онбординге.
Такой набор полей мы можем взять только после верификации персоны.

При этом встраивать в флоу онбординга было очень сложно, потому что данные по верификации приходят асинхронно и клиент может заполнять данные на других шагах.

Итого решили делать это не во флоу онбординга, а после открытия счета, что разом решило все сложные граничные костыльные кейсы и упростило разработку в раз 5:)
 


Как итог - нужно всегда делать код более простым и понятным, граничные условия тяжело поддерживать и если они редки,
их можно отдавать на откуп тех.саппорту, делая их исключительными :) - такую практику я использую в компании и научили меня другие ребята - это сильно сокращает время на реализацию и поддержку кода.
Дополнительно нужно уметь договариться (с Продактами и другими инстанциями), для упрощения жизни себе и им в будущем.


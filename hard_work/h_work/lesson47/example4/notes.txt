До - сохранение связанных документов.
Явно прописано, что при отсутствии активного документа, создается новый, а если есть к нему добавляются файлы.

После - поскольку, документ уникален в рамках инициатора, связи и типа документа - то нет смысла, постоянно доставать активный документ
и делать такие манипуляции.

Основная суть - добавить файлы по конкретному связанному документу.
По сути разделили из-за уровня хранения, метод Add только добавляет, а AddFiles только добавляет новые файлы.
Причем - это притянуто за уши, при генерации пути файла для сохранения используется UploadId файла, всегда уникальный, который приходит с фронта.
То есть логика проверки мерджа файлов в AddFiles - абсолютна бесполезна.
Итого - просто интерфейс ввода вывода в базу..
 
Придется изменить ментальную модель и сам подход

Всегда будем создавать изменение на уровне БД, без какого-либа бесполезного мерджа.
то есть N загрузок от юзера - N связанных документов с таким типом и инициатором.
Но активным будет только один - то есть последняя версия будет считаться активным документом.

Для кейса, когда на фронт отдаем список документов с файлами, иногда необходимо удалять конкретные файлы из документа.
Для этого ранее дополнительно документы удалялись их хранилища (в гугле) - ну как бы файлы удаляют редко и на это можно просто забить.
Тем более - если для анализа фрода какого-нибудь, надо будет найти неактивные документы по юзеру.

Достаточно будет попросить фронтендов присылать всегда - все текущие файлы, вместо удаленных и добавленных.
При желании можно также сделать и если фронтенд будет список только изменений - возьмем внутри активный документ и на его основе вызовем
два метода AddFiles, DeleteFiles, в результате сохраним также копию этого документа - без всяких условий. 

Использовал - изменение ментальной модели, по сути даже никакой паттерн не применил, клево :) 




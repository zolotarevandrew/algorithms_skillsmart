1) Виды Полиморфизма (если спросят по полиморфизм и ООП)
ad-hoc - предоставляет специфическое поведение для конкретных типов (реализация через перегрузку методов или generic-и с условной логикой);
полиморфизм подтипов - определяем единый интерфейс для разных типов, реализация будет различна (реализация через наследование);
параметрический полиморфизм — предоставляет универсальное поведение, независимое от конкретного типа (за счет generic-ов);

2) Какой будет план выполнения запроса при наличии индекса? (PostgreSQL)
Зависит от множества факторов. Основные из них:
- Распределение данных. PostgreSQL Использует собранную статистику для оценки кардинальности (кол-ва строк), распределения данных, частоты значений и уникальности.
Если статистика не обновлена через AUTOVACUUM, то план может быть неоптимальным.
- Селективность запроса (сколько строк отфильтруем). Низкая - sequential scan. Средняя - bitmap index scan. Высокая - index scan.
- Нагрузка на систему. Если в буферном кэше мало места, может быть выбрано sequential scan.
- Размер таблицы. Для маленьких таблиц sequential scan может быть выгоднее.

3) Сложность QuickSort

QuickSort в среднем имеет сложность O(n log n), но в худшем случае сложность O(n²). 
Худший случай можно минимизировать при помощи случайного выбора опорного элемента (Randomized QuickSort).

Или использовать Median of Medians - выбирает опорный элемент, который гарантированно делит массив на две части, каждая из которых не превышает 70% размера исходного массива. 
Это позволяет гарантировать O(n log n), но на практике из-за увеличения константы снижается производительность и есть трудности в реализации.

Итого - не особо хочется умничать на собеседованиях, но учту момент, что нужно вести интервью в нужном интервьюверу направлении. 


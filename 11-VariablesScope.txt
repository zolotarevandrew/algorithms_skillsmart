var transportationFreq - { var transportationFreq = GetTransportationFreq()  } 
//было периодичность перевозки подсчитывалась и записывалась внутри основного метода, 
//можно было изменить переменную после работы с ней, вынес в метод GetTransportationFreq и отделил областью видимости {}

var expertSealId - payload.ExpertSealId = GetExpertSealIdAsync()
//было получение подписи эксперта техосмотра и далее можно было изменить переменную, получение вынесено в отдельный метод и записывается напрямую в payload для отправки события

var applicant - FillApplicantById
//было переменная хранящая данные заявителя, и далее заполнялись все переменные для отправки события, вынес в отдельный метод заполнения конкретных данных заявителя в событии

int encodingCode - _zipExtractor.ExtractFolders(command.Data.ToArray(), GetEncodingCode)
//было подсчет кода кодировки в методе, стало вынесен метод получения кодировки и передан напрямую в необходимый метод

var finesRequest - _finesClient.SearchAsync(GetFinesRequest())
//было создание запроса на получение штрафов с логикой, которую можно было изменить в текущем метода,
//стало вынесен метод получения запроса на штрафы GetFinesRequest и передача его напрямую в клиента получения штрафов

//было получение токена подключения к телеграм и его сохранение в настройки пользователя, стало отделено в локальную область видимости {}

//подсчет долгов контрагента, было размазано внутри метода, стало отделено в отдельную область видимости {}

//получение данных pdf проекции для отправки события, было размано внутри метода, стало вынесен метод payload.PdfProjection = GetPdfProjection()

//выставление счета на оплату, была размазана логика, было вынесено три метода GetPayerShortName(), GetPaymentAmountInRubles(), GetPaymentSign()
//для заполнения данных оплаты напрямую

//команда создания множества машин, была размана логика отправки события о создании машин, стал один метод SendEventAsync

//пересчет дат действия договоров перевозки, была размазана логика для каждого отдельного случая, стал один метод RecalcCarriageContractDates

//status в классе StatementPayment(оплата заявки), было открытое поле статуса, сделал закрытым, добавил get only поля - IsPayed, HasPayError

//status в классе Statement(заявка), было открытое поле статуса, сделал закрытым, добавил get only поля - IsInProgress, IsCompleted, IsCancelled

//status в классе VehicleAnnualPass(годовой пропуск на машину), сделал закрытым, было открытое поле статуса, добавил get only поля - IsAnnulled, IsActive, IsFinished

//подсчет выбора договора лизинга и или договора аренды для подачи заявления на пропуск
//было размазана куча переиспользуемых переменных в методе, стало добавил отдельные методы подчета для каждого из условий CalcForDocsEmpty, CalcForLeasingDocEmpty, CalcForRentDocEmpty


